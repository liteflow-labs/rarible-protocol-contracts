{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xaA21b9C0d5F61ffdB22DCebDaD966d8907c1dEdF",
    "txHash": "0x0702a5c951734b765ecb4b1a8a9d32e26414ab8a792cd26b5782941a000ebfb1"
  },
  "proxies": [
    {
      "address": "0xf14b45E1Af118d6f050373036C90713Ff4347e4e",
      "txHash": "0xe68cefcda38708a309af9d29fdfb8c4b5f747661c864cb95564766864694ad1a",
      "kind": "transparent"
    },
    {
      "address": "0x65bd75131A7196276BfeD958c8Ba4DF1ace281df",
      "txHash": "0x0875b2e901f7a2ebe9fdc969f4daf3b8f48f5fc88ec97376851747f8627ca28a",
      "kind": "transparent"
    },
    {
      "address": "0x995A71D0F301caf13eCf0207e5E0E1cb8D83928e",
      "txHash": "0xb3513447cba0495883ca87d8eda111cc152baf53e52fbab1aacdf816faf4bc99",
      "kind": "transparent"
    },
    {
      "address": "0x15f22B4b1633205C4E1517356c5DbC876975edC3",
      "txHash": "0xb0584b242a96dbfb6490d108a99521d83c6acab68c04d67fac213bf52b045842",
      "kind": "transparent"
    },
    {
      "address": "0x4d8327761751d9c8d72f4c76225901D159638100",
      "txHash": "0x0865ebb73c19f17725c61aa29b1f555a475837b48808da72be4c0feaeb1f4440",
      "kind": "transparent"
    }
  ],
  "impls": {
    "740f4cf0b0860289e2bcafb1ee88e5020261f296747cabf8cbb0ab8297409b33": {
      "address": "0x0c8abE852E0e724FC4fF2EBC92Ce1C93DdA40c51",
      "txHash": "0x1abd6670d9dacbf746e66b3ecac0fd5c2c0796e80c7472c1f6ac6ae74ba7ef57",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesByTokenAndTokenId",
            "type": "t_mapping(t_bytes32,t_struct(RoyaltiesSet)7649_storage)",
            "src": "../@rarible/royalties-registry/contracts/RoyaltiesRegistry.sol:29"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesByToken",
            "type": "t_mapping(t_address,t_struct(RoyaltiesSet)7649_storage)",
            "src": "../@rarible/royalties-registry/contracts/RoyaltiesRegistry.sol:31"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "royaltiesProviders",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@rarible/royalties-registry/contracts/RoyaltiesRegistry.sol:33"
          },
          {
            "contract": "RoyaltiesRegistry",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@rarible/royalties-registry/contracts/RoyaltiesRegistry.sol:250"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoyaltiesSet)7649_storage)": {
            "label": "mapping(bytes32 => struct RoyaltiesRegistry.RoyaltiesSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoyaltiesSet)7649_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltiesSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)8909_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Part)8909_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)8909_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_address,t_struct(RoyaltiesSet)7649_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltiesSet)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fc442ef0b7e3abee17a91f5781e2e98c7c460b102842e4e05e3e306bb9ca7eea": {
      "address": "0xD2888E3d12Fafb15581AdEaB05817b1d0A6a7040",
      "txHash": "0x0dbeea645d6962dec13f9eefae15bcc0263613706a44ff21ac0c453a10c12583",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)2620_storage)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)1997_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:38"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:93"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Upgradeable.sol:495"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721DefaultApproval.sol:8"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721DefaultApproval.sol:24"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721BurnableUpgradeable.sol:40"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1271/ERC1271Validator.sol:34"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/Mint721Validator.sol:16"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721Lazy",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Lazy.sol:23"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Lazy.sol:114"
          },
          {
            "contract": "HasContractURI",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:9"
          },
          {
            "contract": "HasContractURI",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:29"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Base.sol:30"
          },
          {
            "contract": "ERC721Rarible",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721/ERC721Rarible.sol:34"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)8909_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)8909_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)2620_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)2620_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2234_storage"
              }
            ]
          },
          "t_struct(Set)2234_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)1997_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1679_storage"
              }
            ]
          },
          "t_struct(Map)1679_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1671_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)1671_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)1671_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "944b6d43a2537134b1ed6c6a7d166094f7c3eb6618d87adc4565b3d89d4dc8f5": {
      "address": "0x0471D68025808091F83924338B9135e6C48907BB",
      "txHash": "0xab98d965d33e18067516632cf1e82e0f2100126b9c39cb6c55b10ce7042770e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Upgradeable.sol:33"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Upgradeable.sol:421"
          },
          {
            "contract": "ERC1155DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155DefaultApproval.sol:8"
          },
          {
            "contract": "ERC1155DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155DefaultApproval.sol:20"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155BurnableUpgradeable.sol:40"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155BaseURI.sol:14"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155BaseURI.sol:17"
          },
          {
            "contract": "ERC1155BaseURI",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155BaseURI.sol:69"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1271/ERC1271Validator.sol:34"
          },
          {
            "contract": "Mint1155Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/Mint1155Validator.sol:16"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Lazy.sol:20"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "supply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Lazy.sol:21"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "minted",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Lazy.sol:22"
          },
          {
            "contract": "ERC1155Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Lazy.sol:148"
          },
          {
            "contract": "HasContractURI",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:9"
          },
          {
            "contract": "HasContractURI",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:29"
          },
          {
            "contract": "ERC1155Base",
            "label": "name",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Base.sol:13"
          },
          {
            "contract": "ERC1155Base",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Base.sol:14"
          },
          {
            "contract": "ERC1155Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Base.sol:82"
          },
          {
            "contract": "ERC1155Rarible",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Rarible.sol:10"
          },
          {
            "contract": "ERC1155Rarible",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/tokens/contracts/erc-1155/ERC1155Rarible.sol:57"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)8909_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)8909_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "0f38a87a9cd6ed147b12d9b695a54c0cba915064ca6d21fe8a00d28a699540c8": {
      "address": "0x4bFC95EBceed02640632C24287Be35d2549EE540",
      "txHash": "0x382d7793a04a903adae5d86a62957eabbcaf84f4c926ea9d2731eb266dff7486",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AssetMatcher",
            "label": "matchers",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../@rarible/exchange-v2/contracts/AssetMatcher.sol:13"
          },
          {
            "contract": "AssetMatcher",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/exchange-v2/contracts/AssetMatcher.sol:77"
          },
          {
            "contract": "TransferExecutor",
            "label": "proxies",
            "type": "t_mapping(t_bytes4,t_address)",
            "src": "../@rarible/exchange-v2/contracts/TransferExecutor.sol:17"
          },
          {
            "contract": "TransferExecutor",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/exchange-v2/contracts/TransferExecutor.sol:57"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "OrderValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/exchange-v2/contracts/OrderValidator.sol:50"
          },
          {
            "contract": "ExchangeV2Core",
            "label": "fills",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@rarible/exchange-v2/contracts/ExchangeV2Core.sol:21"
          },
          {
            "contract": "ExchangeV2Core",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/exchange-v2/contracts/ExchangeV2Core.sol:130"
          },
          {
            "contract": "RaribleTransferManager",
            "label": "protocolFee",
            "type": "t_uint256",
            "src": "../@rarible/exchange-v2/contracts/RaribleTransferManager.sol:22"
          },
          {
            "contract": "RaribleTransferManager",
            "label": "royaltiesRegistry",
            "type": "t_contract(IRoyaltiesProvider)8897",
            "src": "../@rarible/exchange-v2/contracts/RaribleTransferManager.sol:23"
          },
          {
            "contract": "RaribleTransferManager",
            "label": "defaultFeeReceiver",
            "type": "t_address",
            "src": "../@rarible/exchange-v2/contracts/RaribleTransferManager.sol:25"
          },
          {
            "contract": "RaribleTransferManager",
            "label": "feeReceivers",
            "type": "t_mapping(t_address,t_address)",
            "src": "../@rarible/exchange-v2/contracts/RaribleTransferManager.sol:26"
          },
          {
            "contract": "RaribleTransferManager",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@rarible/exchange-v2/contracts/RaribleTransferManager.sol:226"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IRoyaltiesProvider)8897": {
            "label": "contract IRoyaltiesProvider"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a38af53fe7e8afe0080ffa318daf07fe0ce482cf5338d3a9d4cca996233b486a": {
      "address": "0x90236954D827073167460A80b475d44Eae54563c",
      "txHash": "0xae5a0ce082e4c160fdce38d1688c48f115804df585c071f7a9a5ec66e50b6047",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-1271/ERC1271Validator.sol:34"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:23"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:26"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:29"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:32"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:35"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:38"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:66"
          },
          {
            "contract": "ERC721UpgradeableMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "../@rarible/tokens-minimal/contracts/erc-721/ERC721UpgradeableMinimal.sol:443"
          },
          {
            "contract": "ERC721DefaultApprovalMinimal",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:8"
          },
          {
            "contract": "ERC721DefaultApprovalMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721DefaultApprovalMinimal.sol:24"
          },
          {
            "contract": "ERC721BurnableUpgradeableMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721BurnableUpgradeableMinimal.sol:41"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/Mint721Validator.sol:16"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royalties",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/royalties/contracts/impl/AbstractRoyalties.sol:8"
          },
          {
            "contract": "ERC721URI",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721URI.sol:19"
          },
          {
            "contract": "ERC721URI",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721URI.sol:22"
          },
          {
            "contract": "ERC721URI",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721URI.sol:92"
          },
          {
            "contract": "ERC721LazyMinimal",
            "label": "creators",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721LazyMinimal.sol:23"
          },
          {
            "contract": "ERC721LazyMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721LazyMinimal.sol:112"
          },
          {
            "contract": "HasContractURI",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:9"
          },
          {
            "contract": "HasContractURI",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/tokens/contracts/HasContractURI.sol:29"
          },
          {
            "contract": "ERC721BaseMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721BaseMinimal.sol:38"
          },
          {
            "contract": "ERC721RaribleMinimal",
            "label": "isPrivate",
            "type": "t_bool",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721RaribleMinimal.sol:10"
          },
          {
            "contract": "ERC721RaribleMinimal",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@rarible/tokens/contracts/erc-721-minimal/ERC721RaribleMinimal.sol:57"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)8909_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])"
          },
          "t_array(t_struct(Part)8909_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)8909_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    }
  }
}
